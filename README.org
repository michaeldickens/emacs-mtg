#+TITLE: Magic: the Gathering in Emacs

Do you like how websites like [[https://magic.gg/][magic.gg]] and [[https://mtg.wiki/][mtg.wiki]] let you hover your mouse over a card name to see a picture of the card? Well, this module replicates that functionality in Emacs.

** Requirements
For full functionality, you must have [[https://imagemagick.org/][ImageMagick]] installed, but this module still mostly works without it.
** Usage
#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path /path/to/mtg.el)
  (require 'mtg)
#+END_SRC

This module allows you to refer to Magic cards in Org Mode using a new type of link prefixed with ~mtg:~. For example:

#+BEGIN_EXAMPLE
[[mtg:Black Lotus]] might be the strongest card in my collection, but my personal favorite is [[mtg:Grizzly Bears]].
#+END_EXAMPLE

When Org Mode sees a link to an MTG card, it will do the following:

1. If the card is not downloaded yet, download the card by querying the [[https://scryfall.com/][Scryfall]] API for a card with the given name.
2. When you open the link (using ~org-open-at-point~ or ~C-c C-o~), Emacs displays an image of the card in the minibuffer.

Here's how it looks:

[[file:example-grizzly-bears.png]]

By default, card images and data are downloaded to =~/.emacs.d/mtg-cards/=, but you can change this by customizing the variable ~mtg/db-path~.

Scryfall's API has fuzzy name matching, so for example =[[mtg:blac lotus]]= will still display properly.
** Card legality
Cards are displayed with a red tint if they are illegal in the preferred format. It looks like this:

[[file:example-black-lotus.png]]

When checking legality, this module uses Standard format by default, but you can customize it by setting the variable ~mtg/default-format~. You can also set file-local or heading-local formats in Org Mode using the ~:MTG_FORMAT:~ property. For example:

#+BEGIN_EXAMPLE
  :PROPERTIES:
  :MTG_FORMAT: standard
  :END:
  If you open this link --> [[mtg:Black Lotus]], the card will appear
  with a red tint because it's illegal in Standard.
  ** My vintage cards
  :PROPERTIES:
  :MTG_FORMAT: vintage
  :END:
  [[mtg:Black Lotus][Black Lotus]] is legal in Vintage, so here it will
  appear with no tint.
#+END_EXAMPLE

Note: Adding a red tint requires [[https://imagemagick.org/][ImageMagick]]. If you don't have ImageMagick installed, all cards will be displayed as if they're legal.
** Exporting to HTML
If you export Org Mode files to HTML, you can make the MTG card links display images on hover. For this to work, you must include some custom CSS in your Org Mode file.

In this module there is a file called ~export-style.setup~ that includes some custom CSS. To include this custom CSS in Org Mode, put this line at the top of your Org Mode file:

#+BEGIN_EXAMPLE
#+SETUPFILE: /path/to/export-style.setup
#+END_EXAMPLE

Then call ~org-export-dispatch~ to export the Org file to HTML.
** Table utilities
mtg.el comes with functions for working with Org Mode tables. The functions assume you have a table where one column contains links to MTG cards, like this:

#+BEGIN_EXAMPLE
| [[mtg:Black Lotus]]       |
| [[mtg:Grizzly Bears]]     |
| [[mtg:Colossal Dreadmaw]] |
#+END_EXAMPLE

~mtg/table-sort-by-property~ takes a property as a string (such as "name", "rarity", or "color") and sorts the table by looking up that property for each card. This only works if you've already downloaded the card info (which happens when you view the card or export the whole file).

~mtg/table-insert-column~ takes a property as a string and inserts a new column containing that property for each card. For example, calling ~(mtg/table-insert-column "rarity")~ on the table above produces this:

#+BEGIN_EXAMPLE
| [[mtg:Black Lotus]]       | bonus  |
| [[mtg:Grizzly Bears]]     | common |
| [[mtg:Colossal Dreadmaw]] | common |
#+END_EXAMPLE

If a property is missing, the cell will be left blank. For example, calling ~(mtg/table-insert-column "power")~ produces

| [[mtg:Black Lotus]]       |   |
| [[mtg:Grizzly Bears]]     | 2 |
| [[mtg:Colossal Dreadmaw]] | 6 |

You can also call ~mtg/get-property~ to return a property for the card at point.
